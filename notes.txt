# Components of K8s
  Pod: a container wrapper. One application per container
  Service: this is like a static ip address. the service attaches to a pod. if the pod dies, the service doesn't die and the pod can retain it's "ip address". also a "load balancer"
  Ingress: this controls access into the k8s cluster. it exposes the node ip address and port. this is also where you can set a url so you're not typing in the ip address all the time.
  ConfigMap: this configmap configures specifics for the pod. example: say you want to change the URL, you would change it in the configmap instead of in the application pod. you do this because if you did the latter you would need to redeploy the application and restart the pod. the configmap prevents that
  Secrets: this is where you store sensitive information.

# Layers of Abstraction
  Deployment manages a > Replicaset manages a > Pod is an abstraction of > Container
  
# K8s YAML Configuration File

3 parts
  1. metadata: name of component
  2. specification: put every kind of configuration you want to apply to the component (ie. number of replica sets). specs will be dictated by kind 
      two top lines declaring what you want to create:
      apiVersion: you have to look up for apiVersion
      kind: [ Deployment | Service | etc ]
  3. status: automatically generated by kubernetes: desired vs. actual. if they do not match, k8s will try to fix it.
      status data is held in "etcd (kubernetes brain)"

# blueprint for pods (Template)
apiVersion:
kind:
metadata:
  name:
  labels: # used by service selector
spec:
  replicas: 
  selector:
  template: # here is the configuration for the pod: it is a config within a config
    metadata:
      labels: # connects deployment to pods, also used by service selector. 
        app:
    spec:   # here is the blueprint for the pod
      containers:
      - name: # name of the container
        image: # the image to use
        ports:
        - containerPort: needs to match targetPort in kind:service

# stopped at complete demo project, timestamp 1:16:15